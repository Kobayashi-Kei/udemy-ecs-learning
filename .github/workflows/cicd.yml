name: Web API CI/CD
on: 
  push: 
    paths:
      - 'cicd-section/api/**'
      - '.github/workflows/**'

env: 
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER: my-app-cluster
  ECS_SERVICE: my-app-api-service
  ECS_REPOSITORY: my-app-api
  ECS_TASK_DEFINITION: cicd-section/.aws/task-def-api.json

# Configure AWS credentialsで利用するため
permissions:
  contents: read
  id-token: write

jobs:
  # Test/Build
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cicd-section/api
    steps:
        # Checkout code (Marketplace Action)
        - uses: actions/checkout@v4
        
        - name : Run Tests and Build an Image
          run: docker image build -t temp_api_image:latest .

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            # Open Id Connect を利用した認証
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Push the image to Amazon ECR
          # AWS Account Idが漏洩しないように変数として渡す 
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # Tagが重複しないように、SHAをタグとしてつける
          run: |
            docker tag temp_api_image:latest $ECR_REGISTRY/$ECS_REPOSITORY:${{ github.sha }}
            docker push $ECR_REGISTRY/$ECS_REPOSITORY:${{ github.sha }}
            echo $ECR_REGISTRY/$ECS_REPOSITORY:${{ github.sha }} > api-image-uri.txt
        
        - name: Upload the image name file as an artifact
          uses: actions/upload-artifact@v4
          with:
            name: api-image-uri
            path: cicd-section/api/api-image-uri.txt

  # Deploy
  deploy:
    runs-on: ubuntu-latest
    # 依存関係を指定
    needs: [test-and-build]
    defaults:
      run:
        working-directory: cicd-section/api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download the image name file from the previous job
        uses: actions/download-artifact@v4
        with:
          name: api-image-uri
          path: artifacts

      - name: Define the image URI
        # $GITHUB_ENVは、GitHub Actionsの環境変数を設定するための特殊な変数
        run: |
          echo "API_IMAGE_URI=$(cat artifacts/api-image-uri/api-image-uri.txt)" >> $GITHUB_ENV

      - name: Fill in the new image URI in the ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_API }}
          container-name: api
          image: ${{ env.API_IMAGE_URI }}
      
      - name: Deploy ECS task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true